name: Python Binding CI

on:
  workflow_dispatch:
  workflow_call:

env:
  PYTHON_VERSION: "3.11"

jobs:
  examples:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --release --out dist --manifest-path moyopy/Cargo.toml
          sccache: 'true'
          manylinux: auto
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('moyopy/examples/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: examples
        shell: bash
        run: |
          set -e
          uv pip install --system --find-links dist moyopy
          uv pip install --system moyopy[interface]
          find moyopy/examples -name "*.py" | xargs -I {} python {}

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --manifest-path moyopy/Cargo.toml
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: pypi-linux-${{ matrix.target }}
          path: dist
      - name: pytest
        if: ${{ startsWith(matrix.target, 'x86_64') }}
        shell: bash
        run: |
          set -e
          uv pip install --system --find-links dist moyopy
          uv pip install --system moyopy[testing,interface]
          pytest -v
      # TODO: too long to build...
      # - name: pytest
      #   if: ${{ !startsWith(matrix.target, 'x86_64') }}
      #   uses: uraimo/run-on-arch-action@v2
      #   with:
      #     arch: ${{ matrix.target }}
      #     distro: ubuntu22.04
      #     githubToken: ${{ github.token }}
      #     install: |
      #       apt-get update -q -y
      #       apt-get install -y --no-install-recommends gcc-aarch64-linux-gnu build-essential python3 python3-dev python3-pip
      #     run: |
      #       set -e
      #       pip install --no-index --find-links dist moyopy
      #       pip install moyopy[testing]
      #       pytest -v

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64]
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          sccache: 'true'
          args: --release --out dist --manifest-path moyopy/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: pypi-windows-${{ matrix.target }}
          path: dist
      # windows runner is simply so slow...
      # https://github.com/Swatinem/rust-cache/issues/169
      # - name: pytest
      #   shell: bash
      #   run: |
      #     set -e
      #     uv pip install --system --link-mode symlink --find-links dist --force-reinstall -e moyopy[dev]
      #     cd moyopy && pytest -v

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --manifest-path moyopy/Cargo.toml
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: pypi-macos-${{ matrix.target }}
          path: dist
      - name: pytest
        if: ${{ !startsWith(matrix.target, 'aarch64') }}
        shell: bash
        run: |
          set -e
          uv pip install --system --find-links dist --force-reinstall -e moyopy[dev]
          cd moyopy && pytest -v

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist --manifest-path moyopy/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: pypi-sdist
          path: dist

  pass:
    name: âœ… Pass ci-python
    needs: [linux, windows, macos, sdist, examples]
    runs-on: ubuntu-latest
    steps:
      - name: Check all CI jobs
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
    if: always()

  # TODO:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [pass]
    environment: release
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: pypi-*
          merge-multiple: true
          path: dist
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          attestations: false
          verbose: true
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: false
          verbose: true

  # TODO:
  docs:
    runs-on: ubuntu-latest
    if: "!startsWith(github.ref, 'refs/tags/')"
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: Swatinem/rust-cache@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist --manifest-path moyopy/Cargo.toml
          sccache: 'true'
          manylinux: auto
      - name: Install
        run: |
          set -e
          uv pip install --system --find-links dist moyopy
          uv pip install --system moyopy[testing,docs]
      - name: Build
        run: |
          sphinx-build moyopy/docs docs_build
      - name: Deploy
        if: ${{ github.event_name == 'push' }}
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs_build
          destination_dir: python
